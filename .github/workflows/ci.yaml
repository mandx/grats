name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: "Build and run integration tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        typescript-version: [5.0.2, 5.0.4, 5.1.6, 5.2.2, 5.3.2, 5.3.3]
        node-version: [18.x, 19.x, 20.x, 21.x]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Install dependencies of all workspace member
        run: |
          pnpm install -r
          pnpm --filter="!website" recursive install --no-lockfile "typescript@${{ matrix.typescript-version }}"
      - name: Build Other Packages (excluding docs website)
        run: pnpm run --filter="!website" -r build
      - name: Run Integration Tests
        run: pnpm run integration-tests

  build-docs-website:
    name: Build Docs Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - name: Use Node.js v20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Build Docs Website
        working-directory: ./website
        run: ./scripts/build.sh

  test:
    name: "JS Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        typescript-version: [5.0.2, 5.0.4, 5.1.6, 5.2.2, 5.3.2, 5.3.3]
        node-version: [16.x, 18.x, 19.x, 20.x, 21.x]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
          pnpm install --workspace-root "typescript@${{ matrix.typescript-version }}"
      - name: Build # Integration tests depend upon having .js versions created by tsc
        run: pnpm run build
      - name: Unit Tests
        run: pnpm run test

  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 19.x, 20.x, 21.x]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
          pnpm install --workspace-root "typescript@${{ matrix.typescript-version }}"
      - name: Lint
        run: pnpm run lint

  main-release:
    name: Publish to NPM
    runs-on: ubuntu-latest
    environment: CI
    if: github.event_name == 'push' && github.repository == 'captbaritone/grats'
    needs: [build, test, lint]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: |
          pnpm install
          pnpm install --workspace-root "typescript@5.3.3"
      - name: Build latest (main) version
        if: github.ref == 'refs/heads/main'
        run: pnpm run build
      - name: Set package version
        run: pnpm version --no-git-tag-version 0.0.0-main-${RELEASE_COMMIT_SHA:0:8}
        env:
          RELEASE_COMMIT_SHA: ${{ github.sha }}
      # https://github.com/pnpm/pnpm/issues/3141#issuecomment-1305563972
      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Publish
        run: pnpm publish --tag main --access=public --no-git-checks
